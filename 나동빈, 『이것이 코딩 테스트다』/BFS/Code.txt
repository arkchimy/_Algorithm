#include <iostream>
#include <queue>

using namespace std;

int row,column;
int Graph[201][201];
int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};
// bool visited[200][200]; // 값을 1씩 늘리는 구현으로 없앰
int cnt = 1;

int BFS(int x, int y)
{
  queue<pair<int,int>> q;
  q.push({x,y});
  
  while(!q.empty())
  {
    x = q.front().first;
    y = q.front().second;
    q.pop();
    for(int i =0; i < 4; i++)
    {
      int rx = x  + dx[i] , ry = y + dy[i];
      if(rx < 0 || rx >= row || ry < 0 || ry >= column) continue;
      // rx >= row 초과할 가능성이 있나?
      if(Graph[rx][ry] == 0) continue;
      if(Graph[rx][ry] == 1)
      {
          q.push({rx,ry});
          Graph[rx][ry] = Graph[x][y] + 1;
      }
    }
  }
  return Graph[row - 1][column - 1];
  
}
int main() 
{
  cin >> row >> column;
  
  for(int i = 0 ; i < row; i++)
  {
    for(int k =0; k < column; k++)
      scanf("%1d",&Graph[i][k]);
  }
 

  cout <<  BFS(0,0) << endl;
}