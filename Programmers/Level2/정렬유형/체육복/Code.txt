#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/ * 24번케이스 실패 */ 

int solution(int n, vector<int> lost, vector<int> reserve) 
{
    int answer = n;
    sort(lost.rbegin(),lost.rend());
    sort(reserve.rbegin(),reserve.rend());
//=====================틀렸던 이유 ======================
    for(vector<int>::iterator iter = reserve.begin(); iter != reserve.end() ;)			
    {   // 여분을 가진 사람이 도난을 당한경우 => 여분을 소모하고 도난에서 제거하는 과정
        bool chk = false;
        for(vector<int>::iterator iter2 = lost.begin(); iter2 != lost.end() ; iter2++)
        {
            if( *iter == *iter2)
            {
                chk = true;
                iter = reserve.erase(iter);
                lost.erase(iter2);
                break;
            }
        }
        if(!chk)
            iter++;
     }
//====================================================
    for(vector<int>::iterator iter = reserve.begin(); iter != reserve.end() ;)
    {
        bool chk = false;
        for(vector<int>::iterator iter2 = lost.begin(); iter2 != lost.end() ; iter2++)
        {
           if((*iter - 1)  ==  *iter2 || (*iter + 1)  ==  *iter2 ||  *iter == *iter2) //reserve - 1  과 같다면
           {
                chk = true;
                iter = reserve.erase(iter); // iter 주의
                lost.erase(iter2);
                break;
           }
        }
        if(!chk)
            iter++;
    }
    answer = n - lost.size();
    return answer;
}